clock {
	timezone EST+5EDT;
	starttime '2009-07-21 00:00:00';
	stoptime '2009-07-22 00:01:00';
}

module tape;
module powerflow{
	solver_method FBS;
}
//example schedule
class player {
	double value;
}
object player {
	name zipload_schedule;
	file zipload_schedule.player;
	loop 0;
}
//zip load with schedule
object triplex_load {
	name "nd_sx3217053c";
	phases CS;
	nominal_voltage 120.089;
	base_power_1 zipload_schedule.value*1888.144;
	base_power_2 zipload_schedule.value*1888.144;
	power_pf_1 0.97;
	power_pf_1 0.97;
	current_pf_1 0.97;
	current_pf_2 0.97;
	impedance_pf_1 0.97;
	impedance_pf_2 0.97;
	power_fraction_1 0.4;
	power_fraction_2 0.4;
	current_fraction_1 0.4;
	current_fraction_2 0.4;
	impedance_fraction_1 0.2;
	impedance_fraction_2 0.2;
}

object recorder {
	parent nd_sx3217053c;
	property base_power_1,base_power_2;
	file zipLoadSchedule.csv;
	interval 60;
}